name: Backend Test

on:
  push:
    branches:
      - main
      - "backend/**"
  pull_request:
    paths:
      - "backend/**"

jobs:
  run-test:
    name: Running test on npm
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: ./backend/package-lock.json
      - name: Install dependencies
        run: npm ci
      - name: Build project
        run: npm run build --if-present
      - name: Run lint
        run: npm run lint
      - name: Run unit test
        run: npm run test
      - name: Run e2e test
        run: npm run test:e2e
  deploy-server:
    name: Deploying server
    runs-on: ubuntu-latest
    needs: [run-test]
    if: |
      always() &&
      github.repository_owner == 'Sublet-K' &&
      (needs.run-test.result == 'success' || needs.run-test.result == 'skipped') &&
      github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      - name: Deploy to server
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          ARGS: "-rlgoDzvc -i"
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          TARGET: ${{ secrets.REMOTE_TARGET }}
          REMOTE_PORT: ${{ secrets.REMOTE_PORT }}
          SCRIPT_AFTER: |
            cd ${{ secrets.REMOTE_TARGET }}
            echo "DATABASE_URL=\"${{ secrets.ENV_DATABASE_URL }}\"
            NODE_ENV=\"${{ secrets.NODE_ENV }}\"
            SESSION_SECRET=\"${{ secrets.SESSION_SECRET }}\"
            FRONTEND_URL=\"${{ secrets.ENV_FRONTEND_URL }}\"
            " > backend/.env
            docker compose up -d --build
